setwd('~/Desktop/')
library(tidyverse)
library(readxl)
library(janitor)
library(car)
library(cowplot)
library(ggpubr)
library(rcartocolor)


##################Following regen1.0 code############ #####
library(ggplot2)
library(ggthemes)
library(plyr)
library(Hmisc)
library(outliers)
library(datasets)
library(lattice)
library(reshape)
library(reshape2)
library(tidyr)
library(nlme)
library(stats)
library(data.table)
library(lawstat)
library(car)
library(dplyr)
library(base)
library(rminer)
library(tidyverse)
library(lme4)
library(lsmeans)
library(lmerTest)

# standard error function
se <- function(x) sd(x)/sqrt(length(x))

# function to visualize the boxplot, histogram, QQ-plot, and kernel density estimate plot for residuals
normality.plots <- function(x) {
  par(mfrow=c(2,2))
  hist(residuals(x), main = "Histogram", xlab = "Values")
  boxplot(residuals(x), main = "Boxplot", ylab = "Values")
  qqnorm(residuals(x))
  qqline(residuals(x))
  plot(density(residuals(x)), main = "Kernel Density Estimate")
}

# function to visaulize the fitted vs. residuals of model and the absolute residuals vs. fitted
var.plots <- function(x) {
  par(mfrow=c(1,2))
  plot(x = fitted(x), y = residuals(x), xlab="Fitted", ylab="Residuals")
  abline(h=0)
  title("Residuals vs. Fitted")
  plot(x = fitted(x), y = abs(residuals(x)), xlab="Fitted", ylab="Absolute Residuals")
  abline(h=0)
  title("Absolute Residuals vs. Fitted")
}

# completeFun removes NA values in a specific column
completeFun <- function(data, desiredCols) {
  completeVec <- complete.cases(data[, desiredCols])
  return(data[completeVec, ])
}

# load booboo weight data 
weight_booboo<- read_csv("booboo_metadata.csv")
weight_booboo$initial_dry_weight_mg<-weight_booboo$initial_dry_weight_g*1000
glimpse(weight_booboo)

# for when I have surface area data 
  # SA <- read.csv("surface_area.csv")
# looking at SurfaceArea df
  # glimpse(SA)

# converting ID to factor
  # SA$ID <- as.factor(SA$ID)
weight_booboo$tag_id <- as.factor(weight_booboo$tag_id)

# merging Weight and SurfaceArea df's by ID
  # Weight <- left_join(SA, weight_booboo, by = 'tag_id')

# temporary standardized change in weight by initial weight until i finish extracting SA from models
weight_booboo$SD <- (weight_booboo$growth_mg)/(weight_booboo$initial_dry_weight_mg)
weight_booboo$SD <- (weight_booboo$SD)/ 93

# standardizing the difference in weight (mg) by surface area (cm^2)
  # Weight$Stand_diff <- (Weight$Diff_weight_mg)/(Weight$Surface_area_cm2)
# standardizing mg/cm^2 by the experiment duration (91 days)
  # Weight$Stand_diff <- (Weight$Stand_diff)/ 91
# units now mg cm^-2 day^-1

#set levels for treatment
weight_booboo$treatment<- factor(weight_booboo$treatment, levels = c("control", "0.05", "0.1","0.2"))

########### Different in weight not standardized by anything:##### 
# summarizing data to plot
WeightSummary <- ddply(weight_booboo, .(treatment), summarise,
                       'mean'=mean(growth_mg, na.rm = TRUE),
                       'se'=se(growth_mg ),
                       'N'=length(growth_mg ))

levels(WeightSummary$treatment) #confirm level order

dodge<-position_dodge(width=0.6) # this offsets the points so they don't overlap

ggplot(WeightSummary, aes(x = treatment, y = mean, colour = treatment, fill = treatment))+
  geom_bar(stat="identity", position="dodge") +
  geom_errorbar(aes(ymin = mean - se, 
                    ymax = mean + se), 
                width=0, position=position_dodge(width = 0.9))+
  geom_point(data = weight_booboo, aes(x = treatment, y = growth_mg, colour = treatment), shape = 21, alpha = 0.7,
             position = position_jitterdodge(jitter.width = 0.3, jitter.height=0.2, dodge.width=0.9))+
  scale_color_manual(values = c('black', 'black', 'black','black'), guide="none")+
  scale_fill_manual(values = c('white', 'gray73', 'gray40', 'gray30'), labels=c("control", "5%", "10%", "20%"))+
  xlab(expression("% removal"))+
  ylab(expression(paste("growth (mg) not standardized")))+  theme_few(base_size = 12)+
  theme(axis.text.x=element_text(colour="black"))+
  theme(axis.text.y=element_text(colour="black"))

################# growth standardized by initial weight (SD): ##### 
WeightSummary <- ddply(weight_booboo, .(treatment), summarise,
                       'mean'=mean(SD, na.rm = TRUE),
                       'se'=se(SD),
                       'N'=length(SD))

levels(WeightSummary$treatment) #confirm level order

dodge<-position_dodge(width=0.6) # this offsets the points so they don't overlap

ggplot(WeightSummary, aes(x = treatment, y = mean, colour = treatment, fill = treatment))+
  geom_bar(stat="identity", position="dodge") +
  geom_errorbar(aes(ymin = mean - se, 
                    ymax = mean + se), 
                width=0, position=position_dodge(width = 0.9))+
  geom_point(data = weight_booboo, aes(x = treatment, y = SD, colour = treatment, size= initial_dry_weight_mg), shape = 21, alpha = 0.7,
             position = position_jitterdodge(jitter.width = 0.3, jitter.height=0.2, dodge.width=0.9))+
  scale_color_manual(values = c('black', 'black', 'black', 'black'), guide="none")+
  scale_fill_manual(values = c('white', 'gray73', 'gray40', 'gray30'), labels=c("control", "5%", "10%", "20%"))+
  xlab(expression("% removal"))+
  ylab(expression(paste("growth (mg) standardized")))+  theme_few(base_size = 12)+
  theme(axis.text.x=element_text(colour="black"))+
  theme(axis.text.y=element_text(colour="black"))



################# growth standardized by initial weight: ##### 
WeightStart <- ddply(weight_booboo, .( treatment), summarise,
                     'mean'=mean(initial_dry_weight_mg, na.rm = TRUE),
                     'se'=se(initial_dry_weight_mg),
                     'N'=length(initial_dry_weight_mg))

levels(WeightStart$treatment) #confirm level order

dodge<-position_dodge(width=0.6) # this offsets the points so they don't overlap

ggplot(WeightStart, aes(x = treatment, y = mean, colour = treatment, fill = treatment))+
  geom_bar(stat="identity", position="dodge") +
  geom_errorbar(aes(ymin = mean - se, 
                    ymax = mean + se), 
                width=0, position=position_dodge(width = 0.9))+
  geom_point(data = weight_booboo, aes(x = treatment, y = initial_dry_weight_mg, colour = treatment), shape = 21, alpha = 0.7,
             position = position_jitterdodge(jitter.width = 0.3, jitter.height=0.2, dodge.width=0.9))+
  scale_color_manual(values = c('black', 'black', 'black', 'black'), guide="none")+
  scale_fill_manual(values = c('white', 'gray73', 'gray40', 'gray30'), labels=c("control", "5%", "10%", "20%"))+
  xlab(expression("% removal"))+
  ylab(expression(paste("initial weight (mg)")))+  theme_few(base_size = 12)+
  theme(axis.text.x=element_text(colour="black"))+
  theme(axis.text.y=element_text(colour="black"))




#################Experimenting####################### ##### 
getwd()
booboo<- read.csv(file = "booboo_metadata.csv", 
                  header = T)

plot(log(growth_mg)~treatment,data=booboo)

subset5<- grep(pattern="0.05", x=booboo$treatment)
subset5data<- booboo[subset5,]

mean(grep(pattern="0.05", x=booboo$treatment))
#OR 
mean(subset5)


avg_growth<-c(mean(grep(pattern="control", x=booboo$treatment)),
              mean(grep(pattern="0.05", x=booboo$treatment)),
              mean(grep(pattern="0.1", x=booboo$treatment)),
              mean(grep(pattern="0.2", x=booboo$treatment)))
names(subset5data)

tag_id<-as.character(subset5data$tag_id)
growth_mg<-(subset5data$growth_mg)
subset<- data.frame(id = tag_id, growth = growth_mg)

hist(subset5data$initial_dry_weight_g)
hist(log(subset5data$initial_dry_weight_g))
plot(id~growth, data=subset)
plot(id~log(growth), data=subset)


##############################PERCENT MORTALITY################# #####
mortality<-read_xlsx("booboo_survival.xlsx", sheet = "survival_2")%>%clean_names()%>%
  mutate(wound=case_when(wound==0.05~"5%",
                       wound==0.1~"10%",
                       wound==0.2~"20%",
                       wound== "none"~"none"))%>%
  mutate(wound = fct_relevel(wound, c("none","5%","10%","20%")))
  #slice(1,4)


#p1 <-
  ggplot(mortality, aes(x=wound, y=percent_mortality, fill=wound, width=0.95)) + 
  geom_bar(stat = "identity")+ 
  theme_classic()+
  scale_fill_carto_d(name = "Region", palette = "TealGrn")+
  ylab("Mortality (%)")+
  xlab("% removal")+
  theme(legend.position="none", 
        aspect.ratio = 1.25/1,
        #plot.title = element_text(size=7, face="bold"), 
        axis.text=element_text(size=10),
        axis.title=element_text(size=10, face="bold"))
quartz()


############################GROWTH###################### ##### 
growth<-read_xlsx("booboo_metadata.xlsx", sheet = "metadata")%>%clean_names()%>%
mutate(treatment=case_when(treatment==0.05~"5%",
                         treatment==0.1~"10%",
                         treatment==0.2~"20%",
                         treatment=='control'~"none"))%>%
mutate(treatment = fct_relevel(treatment, c("none", "5%", "10%", "20%")))%>%


 # p2 <- 
  ggplot(growth)+
  geom_boxplot(aes(treatment,growth_mg,fill=treatment))+
  geom_point(aes(treatment,growth_mg),position=position_dodge(width= 0.75))+
  theme_classic()+
  scale_fill_carto_d(name = "Region", palette = "TealGrn")+
  xlab("% removal")+ylab("Growth (mg) not standardized")+
  scale_y_continuous(limits=c(-10000,75000))+
  theme(legend.position="none",
        aspect.ratio = 1.25/1,
        #plot.title = element_text(size=7, face="bold"), 
        axis.text=element_text(size=10),
        axis.title=element_text(size=10, face="bold"))
  
#plot_grid(p1,p2, labels = c('A', 'B'), ncol = 2, align = "h")


#####################GROWTH_STATS############################# ##### 
growthaov<-aov(growth~treatment,data=growth)
summary(growthaov) 
TukeyHSD(growthaov)  

survival<-growth%>%
  filter(health_score=="1")
aliveaov<-aov(growth~treatment, data = survival)
summary(aliveaov) 
TukeyHSD(aliveaov)  

dead<-growth%>%
  filter(health_score=="0")
deadaov<-aov(growth~treatment, data = dead)
summary(deadaov) 
TukeyHSD(deadaov)  


  
  
  
  
  
  
############################SURIVIVORSHIP###################### ##### 
data<-read_xlsx("booboo_survival.xlsx", sheet = "survival")%>%clean_names()%>%
  mutate(percent_wound=case_when(percent_wound==0.05~"5%",
                                 percent_wound==0.1~"10%",
                                 percent_wound==0.2~"20%",
                                 percent_wound=='control'~"none"))%>%
  mutate(percent_wound = fct_relevel(percent_wound, c("none", "5%", "10%", "20%")))%>%
  mutate(block=as.factor(block))


#final
ggplot(data, aes(x=percent_wound, y=dead_alive, fill=percent_wound, width=0.95)) + 
  geom_bar(stat = "identity")+ 
  theme_classic()+
  #display_carto_all(colorblind_friendly = TRUE) this is to see color options
  scale_fill_carto_d(name = "Region", palette = "TealGrn")+
  #ggtitle("Corals survived after 3 months post wounding")+
  ylab("Number of Corals Alive")+
  xlab("Percent Tissue Removed")+
  theme(legend.position="none", 
        aspect.ratio = 1.25/1,
        #plot.title = element_text(size=7, face="bold"), 
        axis.text=element_text(size=7),
        axis.title=element_text(size=7, face="bold"))

quartz()

#################################SURIVIVAL_STATS################# #####

summary(glm(dead_alive~percent_wound+block, family=binomial, data=data))

#survivalaov<-aov(dead_alive~percent_wound, data=data)
#summary(survivalaov) 
#TukeyHSD(survivalaov)  

