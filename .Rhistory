#Set the path of all respirometry files
getwd()
path.p<-"../Respiration/Data/Intiial/Runs" #the location of all your respirometry files
#Bring in the file names.
file.names<-basename(list.files(path = path.p, pattern = "csv$", recursive = TRUE))
file.names
file.names
path.p<-"../Respiration/Data/intiial/runs" #the location of all your respirometry files
#Bring in the file names.
file.names<-basename(list.files(path = path.p, pattern = "csv$", recursive = TRUE))
file.names
getwd
getwd()
path.p
Photo.R<- data.frame(matrix(NA, nrow=length(file.names), ncol=4))
colnames(Photo.R) <- c("fragment.ID.full","Intercept", "umol.L.sec","Temp.C")
View(Photo.R)
#Bring in the file names.
file.names <- list.files(path = path.p, pattern = "csv$", full.names = FALSE)
file.names
path.p<-"Users/ninahmunk/Documents/Projects/Regeneration/Respiration/Data/initial/runs" #the location of all your respirometry files
#Bring in the file names.
file.names <- list.files(path = path.p, pattern = "csv$", full.names = FALSE)
file.names
path.p
getwd
#Set the path of all respirometry files
getwd()
library("ggplot2")
library("segmented")
library("plotrix")
library("gridExtra")
library("LoLinR")
library("lubridate")
library("chron")
library('plyr')
library('dplyr')
library('tidyverse')
library('stringr')
library('Rmisc')
library('janitor')
library('readxl')
#Set the path of all respirometry files
getwd()
setwd("../Regeneration/Respiration/Data/initial")
#Set the path of all respirometry files
getwd()
path.p<-"Users/ninahmunk/Documents/Projects/Regeneration/Respiration/Data/initial/runs" #the location of all your respirometry files
#Bring in the file names.
file.names <- list.files(path = path.p, pattern = "csv$", full.names = FALSE)
setwd("../Regeneration/Respiration/Data/initial/runs")
path.p<-"Users/ninahmunk/Documents/Projects/Regeneration/Respiration/Data/initial/runs" #the location of all your respirometry files
#Bring in the file names.
file.names <- list.files(path = path.p, pattern = "csv$", full.names = FALSE)
file.names
print(file.names)
list.files(path=path.p)
list.files('runs')
file.names<- list.files('runs', pattern = "csv$", full.names = FALSE)
file.names
file.names<- list.files('runs', pattern = "csv$", recursive = TRUE)
file.names
file.names<- basename(list.files('runs', pattern = "csv$", recursive = TRUE))
file.names
#Set the path of all respirometry files
getwd()
#Set the path of all respirometry files
getwd()
path.p <- file.path(current_dir, "runs")
#Set the path of all respirometry files
current_dir<- getwd()
path.p <- file.path(current_dir, "runs")
#setwd("../Regeneration/Respiration/Data/initial/runs")
file.names<-basename(list.files(path = path.p, pattern = "csv$", recursive = TRUE))
file.names
#setwd("../Regeneration/Respiration/Data/initial/runs")
file.names<-basename(list.files(path = path.p, pattern = "csv$", recursive = FALSE))
file.names
#Bring in the file names.
file.names <- list.files(path = path.p, pattern = "csv$", full.names = FALSE)
file.names
#setwd("../Regeneration/Respiration/Data/initial/runs")
file.names <- list.files(path = path.p, pattern = "csv$")
file.names
file.names.clean <- tools::file_path_sans_ext(file.names)
file.names.clean
print(file.names)
print(file.names.clean)
View(file.names.clean)
Photo.R<- data.frame(matrix(NA, nrow=length(file.names.clean), ncol=4))
colnames(Photo.R) <- c("fragment.ID.full","Intercept", "umol.L.sec","Temp.C")
View(Photo.R)
#load in sample information file
Sample.Info<- read.csv(file= "samp_info.csv")
View(Sample.Info)
Volume<- read.csv(file= "resp_info.csv")
Volume<- read.csv(file= "chamber_vol.csv")
Volume
getwd()
SA<- read.csv(file= "final_surface_area.csv")
getwd()
SA<- read.csv(file= "final_surface_area.csv")
Volume<- read.csv(file= "chamber_vol.csv")
SA<- read.csv(file= "final_surface_area.csv")
SA<- read.csv(file= "final_surface_areas.csv")
View(SA)
View(Volume)
#load in sample information file
Treatments<- read.csv(file= "samp_info.csv")
SA<- read.csv(file= "final_surface_areas.csv")%>%
mutate(coral_id = as.character(coral_id))
list_df = list(Treatments, Volume, SA)
Sample.Info<-list_df%>%reduce(inner_join, by= 'coral_id')
Sample.Info
View(Treatments)
Sample.Info<-list_df%>%reduce(inner_join, by= 'coral_id', .keep= TRUE)
Sample.Info
View(Sample.Info)
SA<- read.csv(file= "final_surface_areas.csv")%>%
select(coral_id, CSA_cm2)%>%
mutate(coral_id = as.character(coral_id))
list_df = list(Treatments, Volume, SA)
Sample.Info<-list_df%>%reduce(inner_join, by= 'coral_id', .keep= TRUE)
Sample.Info<-list_df%>%reduce(inner_join, by= 'coral_id')%>%
complete(coral_id = unique(list_df$coral_id))
Sample.Info
View(Sample.Info)
list_df = list(Treatments, Volume, SA)
Sample.Info<-list_df%>%reduce(inner_join, by= 'coral_id')
list_df = list(Treatments, Volume, SA)
Sample.Info<-list_df%>%reduce(left_join, by= 'coral_id')
starttimes<- read.csv(file= "starttimes.csv")
View(starttimes)
file.names.clean
coral_2<- read.csv(file = "20230605_g1_2_O2.csv")
getwd()
coral_2<- read.csv(file = "runs/20230605_g1_2_O2.csv")
coral_2<- read.csv(file = "initial/runs/20230605_g1_2_O2.csv")
coral_2<- read.csv(file = "/runs/20230605_g1_2_O2.csv")
coral_2<- read.csv(file = "runs/20230605_g1_2_O2.csv")
coral_2<- read.csv(file = "../runs/20230605_g1_2_O2.csv")
coral_2<- read.csv(file = "/../runs/20230605_g1_2_O2.csv")
coral_2<- read.csv(file = path.p,"/../runs/20230605_g1_2_O2.csv")
coral_2<- read.csv(file = (path.p,"/../runs/20230605_g1_2_O2.csv"))
coral_2<- read.csv(file = (path.p"/../runs/20230605_g1_2_O2.csv"))
coral_2<- read.csv(file = "../20230605_g1_2_O2.csv")
path.p1 <- file.path(current_dir, "runs", "20230605_g1_2_O2.csv")
# Read the CSV file using the created path
data <- read.csv(path.p1)
path.p1
# Read the CSV file using the created path
data <- read.csv(path.p1)
# Read the CSV file using the created path
data <- read.csv(path.p1, skip = 1, header=T)
View(data)
# Read the respo CSV file using the created path
data <- read.csv(path.p1, skip = 1, header=T)%>%
select(delta_t, Value, Temp)
# Read the respo CSV file using the created path
data <- read.csv(path.p1, skip = 1, header=T)%>%
select(delta_t, Value, Temp)%>% # select columns 'delta_t', 'Value', and 'Temp'
filter(data, delta_t > 25)
# Read the respo CSV file using the created path
data <- read.csv(path.p1, skip = 1, header=T)%>%
select(delta_t, Value, Temp)%>% # select columns 'delta_t', 'Value', and 'Temp'
filter(delta_t > 25)
data <- read.csv(path.p1, skip = 1, header=T)%>%
select(delta_t, Value, Temp)
# Read the respo CSV file using the created path
data <- read.csv(path.p1, skip = 1, header=T)%>%
select(delta_t, Value, Temp)%>% # select columns 'delta_t', 'Value', and 'Temp'
filter(delta_t > 25.0)
# Read the respo CSV file using the created path
data <- read.csv(path.p1, skip = 1, header=T)%>%
select(delta_t, Value, Temp)%>% # select columns 'delta_t', 'Value', and 'Temp'
filter(delta_t < 25.0)
# Read the respo CSV file using the created path
data <- read.csv(path.p1, skip = 1, header=T)%>%
select(delta_t, Value, Temp)%>% # select columns 'delta_t', 'Value', and 'Temp'
filter(delta_t > 25.0)
# Read the respo CSV file using the created path
data <- read.csv(path.p1, skip = 1, header=T)%>%
select(delta_t, Value, Temp)%>% # select columns 'delta_t', 'Value', and 'Temp'
filter(delta_t > 25)
# Read the respo CSV file using the created path
data <- read.csv(path.p1, skip = 1, header=T)%>%
select(delta_t, Value, Temp)%>% # select columns 'delta_t', 'Value', and 'Temp'
filter(delta_t >= 25)
# Read the respo CSV file using the created path
data <- read.csv(path.p1, skip = 1, header=T)%>%
select(delta_t, Value, Temp)%>% # select columns 'delta_t', 'Value', and 'Temp'
filter(delta_t >= 25.000)
path.p1 <- file.path(current_dir, "runs", "20230605_g1_2_O2.csv")
# Read the respo CSV file using the created path
data <- read.csv(path.p1, skip = 1, header=T)
# Read the respo CSV file using the created path
data <- read.csv(path.p1, skip = 1, header=T)%>%
select(delta_t, Value, Temp)%>% # select columns 'delta_t', 'Value', and 'Temp'
mutate(delta_t = delta_t / 180)
# Read the respo CSV file using the created path
data <- read.csv(path.p1, skip = 1, header=T)%>%
select(delta_t, Value, Temp)%>% # select columns 'delta_t', 'Value', and 'Temp'
mutate(as.numeric(delta_t))
data <- read.csv(path.p1, skip = 1, header=T)%>%
select(delta_t, Value, Temp)
# Read the respo CSV file using the created path
data <- read.csv(path.p1, skip = 1, header=T)%>%
select(delta_t, Value, Temp)%>% # select columns 'delta_t', 'Value', and 'Temp'
mutate(delta_t=as.numeric(delta_t))
# Read the respo CSV file using the created path
data <- read.csv(path.p1, skip = 1, header=T)%>%
select(delta_t, Value, Temp)%>% # select columns 'delta_t', 'Value', and 'Temp'
mutate(delta_t=as.numeric(delta_t))%>%
filter(delta_t > 25.0)
data$Value <- rankLocReg(filtered_data$Value, alpha=0.4, method= "pc", verbse= TRUE)
data$Value <- rankLocReg(filtered_data$Value, alpha=0.4, method= "pc", verbose= TRUE)
data$Value <- rankLocReg(data$Value, alpha=0.4, method= "pc", verbose= TRUE)
data$Value <- rankLocReg(xall=data$delta_t, yall=data$Value, alpha=0.4, method= "pc", verbose= TRUE)
model <- rankLocReg(xall=data$delta_t, yall=data$Value, alpha=0.4, method= "pc", verbose= TRUE)
plot(model)
P<-  read.csv(path.p1, skip = 1, header=T)%>%
select(delta_t, Value, Temp)%>% # select columns 'delta_t', 'Value', and 'Temp'
mutate(delta_t=as.numeric(delta_t))%>%
filter(delta_t > 10 & delta_t < 25)
View(P)
Pmodel <- rankLocReg(xall=P$delta_t, yall=P$Value, alpha=0.4, method= "pc", verbose= TRUE)
plot(Pmodel)
